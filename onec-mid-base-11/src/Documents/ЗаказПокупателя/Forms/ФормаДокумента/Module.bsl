
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
	
	// Начало Доработки  
	// Корсукова С.Ю. Задача модуля 11.2
	// Доработка формы: вывод на форму скидки покупателя, применение скидки с пересчетом итоговых сумм
	// Добавление на форму:
	// реквизитов формы:
	// 4. "СкидкаПокупателя" (срез последних соответствующего регистра сведений)
	// 5. "СкидкаПрименена" (Булево)
	// 6. Обработчиков событий элементов формы:"При изменении контрагента","При изменении даты"
	// Доп.информация: Изменен Обработчик события формы "ПриЧтенииНаСервере" 
	
	ГруппаСкидкаКоманда = ЭтаФорма.Элементы.Добавить("НАШ_СкидкаКоманда",Тип("ГруппаФормы"),ЭтаФорма.Элементы.ГруппаШапкаЛево); 		
	ГруппаСкидкаКоманда.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСкидкаКоманда.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаСкидкаКоманда.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	
	Если Параметры.Ключ.Пустая() Тогда
		НАШ_РаботаСФормами.ДобавляемыеРеквизитыФормыЗаказПокупателя(ЭтаФорма);
	КонецЕсли;
	// Поле формы для реквизита формы: "согласованная скидка"
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("НАШ_СогласованнаяСкидка", Тип("ПолеФормы"),ЭтаФорма.Элементы.НАШ_СкидкаКоманда); 
	НовыйЭлемент.Заголовок = "Согласованная скидка";
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ТолькоПросмотр = Истина;
	НовыйЭлемент.ПутьКДанным = "НАШ_СогласованнаяСкидка";
	НовыйЭлемент.Шрифт = Новый Шрифт(,,Истина); 
	//		
	// Создание Команды формы "Применить скидку"
	НАШ_КомандаПрименитьСкидку = ЭтаФорма.Команды.Добавить("НАШ_ПрименитьСкидку");
	НАШ_КомандаПрименитьСкидку.Заголовок = "Применить cкидку";
	НАШ_КомандаПрименитьСкидку.Действие = "НАШ_КомандаПрименитьСкидкуНажатие";
	НАШ_Кнопка = ЭтаФорма.Элементы.Добавить("НАШ_КнопкаСкидка",Тип("КнопкаФормы"),ЭтаФорма.Элементы.НАШ_СкидкаКоманда);
	НАШ_Кнопка.ИмяКоманды = "НАШ_ПрименитьСкидку"; 
	НАШ_Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	
	// Создание Обработчиков событий элементов формы    
	ЭтаФорма.Элементы.Контрагент.УстановитьДействие("ПриИзменении","КонтрагентПриИзменении");
	ЭтаФорма.Элементы.Дата.УстановитьДействие("ПриИзменении","ДатаПриИзменении");
	
	// Конец Доработки

	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	 // Начало Доработки  
	 // Корсукова С.Ю. Задача модуля 11.2 
	 // Скидка покупателя,являющася ревизитом формы, должна быть заполнена при открытии
	 // формы уже созданного раннее документа  
	 
	    НАШ_РаботаСФормами.ДобавляемыеРеквизитыФормыЗаказПокупателя(ЭтаФорма);
       	ЭтотОбъект.НАШ_СогласованнаяСкидка = НАШ_ОбщегоНазначения.СкидкаПокупатель(Объект.Контрагент,Объект.Дата);
		
     // Конец Доработки


	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)

	ЭтотОбъект.НАШ_СогласованнаяСкидка = НАШ_ОбщегоНазначенияВызовСервера.СкидкаПокупатель(Объект.Контрагент,
		Объект.Дата);
	ЭтотОбъект.НАШ_СкидкаПрименена = Ложь;
	НАШ_ПересчитатьТабЧасть();

КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ЭтотОбъект.НАШ_СогласованнаяСкидка = НАШ_ОбщегоНазначенияВызовСервера.СкидкаПокупатель(Объект.Контрагент,
		Объект.Дата);
	ЭтотОбъект.НАШ_СкидкаПрименена = Ложь;
	НАШ_ПересчитатьТабЧасть();

КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Скидка = ЭтотОбъект.НАШ_СогласованнаяСкидка;
КонецПроцедуры


&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	ТекущиеДанные.Скидка = ЭтотОбъект.НАШ_СогласованнаяСкидка;
	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// Начало Доработки  
// Корсукова С.Ю. Задача модуля 11.2
// Доработка формы: пересчет сумм строк при применении скидки контрагента
// Удаление строки кода типовой конфигурации:

	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
// Вставка новой строки кода:
     Если ЭтотОбъект.НАШ_СкидкаПрименена И ЗначениеЗаполнено(ЭтотОбъект.НАШ_СогласованнаяСкидка) Тогда
		ТекущиеДанные.Сумма = (1- ЭтотОбъект.НАШ_СогласованнаяСкидка/100)*ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	Иначе
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	КонецЕсли;
// Конец Доработки 
	
	РассчитатьСуммуДокумента();

	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура НАШ_ПересчитатьТабЧасть()
	
	Перем СтрокаТовар, СтрокаУслуга;
	
	Для Каждого СтрокаТовар Из Объект.Товары Цикл  
		РассчитатьСуммуСтроки (СтрокаТовар);
	КонецЦикла;
	
	Для Каждого СтрокаУслуга Из Объект.Услуги Цикл 
		РассчитатьСуммуСтроки(СтрокаУслуга);
	КонецЦикла;
	
КонецПроцедуры





#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

 &НаКлиенте
Процедура НАШ_КомандаПрименитьСкидкуНажатие(Команда)
	
	Если ЭтотОбъект.НАШ_СкидкаПрименена  Тогда
		Возврат;
	Иначе 
		ЭтотОбъект.НАШ_СкидкаПрименена = Истина;
		НАШ_ПересчитатьТабЧасть();
	КонецЕсли;	
		
КонецПроцедуры 


// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
